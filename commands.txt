EXT = 00000000 Ends the program
LDA = 00000001 Loads to the register, the byte stored at the location specified in the next byte of memory
STO = 00000010 Stores the value that is in the register in the location specified in the next byte of memory
INP = 00000011 Loads user input into the register
OUT = 00000100 Outputs the value into the register
BRO = 00000101 If the register is set to 00000000 then it will run the code at the location specified in the next byte of memory. Otherwise it will skip those bytes
EQU = 00000110 Loads 00000000 or 00000001 if the register is equal to the value specified at the next location
SET = 00000111 Loads the value at the next byte location into the register
ADD = 00001000 Adds the value in the register to the value at the location specified at the next byte. Values over 255 will over flow.
GTO = 00001001 Goes to the byte specified in the next register
SUB = 00001010 Subtracts the value in the register from the value at the locatoin assigned in the next byte. Negative values will overflow
ASS = 00001011 Loads in code from the file assembly.txt
OPC = 00001100 Outputs the character with the ascii value stored in the register
LDR = 00001101 Loads the value at the location specified in the register
LDD = 00001110 Loads the binary of the value of the next byte directly into the register.
GTR = 00001111 Goes to the byte specified in the register
LDL = 00010000 Loads the value of the current memory slot that the instruction is being read in to the register
STR = 00010001 Stores the value at the next location in the location at the register
STT = 00010010 Stores the value at the next location in the location in the location after that
STV = 00010011 Stores the value in the register at the location specified at the next byte's value's location
INC = 00010100 Allows the user to input a character and will store its ascii value in the register.
